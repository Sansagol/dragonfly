/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 13.0 		*/
/*  Created On : 02-янв-2017 22:39:48 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_And_His_Role_Global_User_Role]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_And_His_Role] DROP CONSTRAINT [FK_User_And_His_Role_Global_User_Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_And_His_Role_User]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_And_His_Role] DROP CONSTRAINT [FK_User_And_His_Role_User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_Access_Function_Access_Function]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Role_Access_Function] DROP CONSTRAINT [FK_User_Role_Access_Function_Access_Function]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_User_Role_Access_Function_User_Role]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [User_Role_Access_Function] DROP CONSTRAINT [FK_User_Role_Access_Function_User_Role]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Access_Function]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Access_Function]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Global_User_Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Global_User_Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User_And_His_Role]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User_And_His_Role]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[User_Role_Access_Function]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [User_Role_Access_Function]
GO

/* Create Tables */

CREATE TABLE [Access_Function]
(
	[ID_Access_Function] numeric(18) NOT NULL,
	[Function_Name] nvarchar(255) NOT NULL    -- Название функции, к которой предоставляется доступ
)
GO

CREATE TABLE [Global_User_Role]
(
	[ID_User_Role] numeric(18) NOT NULL,
	[Name] nvarchar(255) NOT NULL    -- Название роли
)
GO

CREATE TABLE [User]
(
	[ID_User] numeric(18) NOT NULL IDENTITY (1, 1),
	[Name] nvarchar(255) NOT NULL,    -- Имя пользователя
	[Surname] nvarchar(255) NULL,
	[Password] nvarchar(255) NULL,    -- Хеш пароля пользователя
	[Is_Ldap_User] bit NOT NULL DEFAULT 0,    -- Является ли пользователь LDAP пользователем
	[E-mail] nvarchar(255) NOT NULL,    -- Почтовый ящик пользователя
	[Date_Creation] datetime2(7) NOT NULL
)
GO

CREATE TABLE [User_And_His_Role]
(
	[ID_User] numeric(18) NOT NULL,
	[ID_User_Role] numeric(18) NOT NULL
)
GO

CREATE TABLE [User_Role_Access_Function]
(
	[ID_User_Role] numeric(18) NOT NULL,
	[ID_Access_Function] numeric(18) NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [Access_Function] 
 ADD CONSTRAINT [PK_AccessFunctions]
	PRIMARY KEY CLUSTERED ([ID_Access_Function] ASC)
GO

ALTER TABLE [Global_User_Role] 
 ADD CONSTRAINT [PK_User_Role]
	PRIMARY KEY CLUSTERED ([ID_User_Role] ASC)
GO

ALTER TABLE [User] 
 ADD CONSTRAINT [PK_User]
	PRIMARY KEY CLUSTERED ([ID_User] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_User_User_Role] 
 ON [User] ([ID_User] ASC)
GO

ALTER TABLE [User_And_His_Role] 
 ADD CONSTRAINT [PK_User_User_Role]
	PRIMARY KEY CLUSTERED ([ID_User] ASC,[ID_User_Role] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_And_His_Role_Global_User_Role] 
 ON [User_And_His_Role] ([ID_User_Role] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_And_His_Role_User] 
 ON [User_And_His_Role] ([ID_User] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_Access_Function_Access_Function] 
 ON [User_Role_Access_Function] ([ID_Access_Function] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_User_Role_Access_Function_User_Role] 
 ON [User_Role_Access_Function] ([ID_User_Role] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [User_And_His_Role] ADD CONSTRAINT [FK_User_And_His_Role_Global_User_Role]
	FOREIGN KEY ([ID_User_Role]) REFERENCES [Global_User_Role] ([ID_User_Role]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_And_His_Role] ADD CONSTRAINT [FK_User_And_His_Role_User]
	FOREIGN KEY ([ID_User]) REFERENCES [User] ([ID_User]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Role_Access_Function] ADD CONSTRAINT [FK_User_Role_Access_Function_Access_Function]
	FOREIGN KEY ([ID_Access_Function]) REFERENCES [Access_Function] ([ID_Access_Function]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [User_Role_Access_Function] ADD CONSTRAINT [FK_User_Role_Access_Function_User_Role]
	FOREIGN KEY ([ID_User_Role]) REFERENCES [Global_User_Role] ([ID_User_Role]) ON DELETE No Action ON UPDATE No Action
GO

/* Create Table Comments */


if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Access_Function', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Таблица содержит функции, к которым может иметь доступ пользователь', 'SCHEMA', 'dbo', 'table', 'Access_Function' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Таблица содержит функции, к которым может иметь доступ пользователь', 'SCHEMA', 'dbo', 'table', 'Access_Function' 
end

EXEC sp_addextendedproperty 'MS_Description', 'Название функции, к которой предоставляется доступ', 'Schema', [dbo], 'table', [Access_Function], 'column', [Function_Name]
GO


if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'Global_User_Role', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Роли пользователей в системе  	1. Administrator 	2. User', 'SCHEMA', 'dbo', 'table', 'Global_User_Role' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Роли пользователей в системе  	1. Administrator 	2. User', 'SCHEMA', 'dbo', 'table', 'Global_User_Role' 
end

EXEC sp_addextendedproperty 'MS_Description', 'Название роли', 'Schema', [dbo], 'table', [Global_User_Role], 'column', [Name]
GO


if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'User', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Пользователь системы', 'SCHEMA', 'dbo', 'table', 'User' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Пользователь системы', 'SCHEMA', 'dbo', 'table', 'User' 
end

EXEC sp_addextendedproperty 'MS_Description', 'Имя пользователя', 'Schema', [dbo], 'table', [User], 'column', [Name]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Хеш пароля пользователя', 'Schema', [dbo], 'table', [User], 'column', [Password]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Является ли пользователь LDAP пользователем', 'Schema', [dbo], 'table', [User], 'column', [Is_Ldap_User]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Почтовый ящик пользователя', 'Schema', [dbo], 'table', [User], 'column', [E-mail]
GO


if exists (select * from ::fn_listextendedproperty ('MS_Description', 'SCHEMA', 'dbo', 'table', 'User_And_His_Role', NULL, NULL)) 
begin 
  EXEC sys.sp_updateextendedproperty 'MS_Description', 'Таблица содержит сопоставление по ролям пользователей', 'SCHEMA', 'dbo', 'table', 'User_And_His_Role' 
end 
else 
begin 
  EXEC sys.sp_addextendedproperty 'MS_Description', 'Таблица содержит сопоставление по ролям пользователей', 'SCHEMA', 'dbo', 'table', 'User_And_His_Role' 
end
